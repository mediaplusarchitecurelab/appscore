{"version":3,"sources":["logo_yuntech.svg","components/scoreButton.js","components/toggleButton.js","components/cellCluster.js","layouts/scoreTable.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ScoreButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clickCount","id","column","inputValue","scoreValue","uploadValue","bind","assertThisInitialized","e","console","log","datastr","uploaddata","data","sheetUrl","sheetTag","$","ajax","type","beforeSend","res","setRequestHeader","url","dataType","cache","success","response","evt","setState","target","value","_this2","react_default","a","createElement","Button","animated","onClick","Content","visible","hidden","Icon","name","Input","placeholder","onChange","updateInputValue","React","Component","ToggleButton","handleClick","active","window","location","reload","toggle","CellCluster","nd","i","rownum","row","j","columnnum","push","clustername","modalTrigger","modaltrigger","celltable","map","Table","Row","key","each","Cell","Modal","size","trigger","color","done","groupName","seatNumber","Header","image","Image","wrapped","src","Description","Body","scoreButton","scoreTech","scoreCreative","scorePresent","scoreDesign","Actions","toggleButton","HeaderCell","textAlign","colSpan","scoreTable","content","getData","vjson","A","B","C","D","E","fetch","then","json","responseJson","feed","entry","length","snv","gsx$座號","$t","cn","split","v","vd","gsx$是否完成一","val","gsx$列值","gsx$組名","pdf","gsx$簡報","gsx$技術分一","gsx$創意分一","gsx$簡報分一","gsx$設計分一","gsx$創造價值分一","catch","error","ca","Grid","cellCluster","cb","cc","cd","ce","attached","basic","celled","Column","width","App","className","logo","alt","as","layouts_scoreTable","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a61550bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_yuntech.d39778b4.svg\";","import React from 'react';\r\nimport { Button, Input, Icon } from 'semantic-ui-react';\r\nimport $ from 'jquery';\r\n\r\nclass ScoreButton extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = ({ clickCount : 0,\r\n                        id: this.props.id,\r\n                        column: this.props.column,\r\n                        inputValue: this.props.scoreValue\r\n                     });\r\n\r\n        this.uploadValue = this.uploadValue.bind(this);\r\n\r\n        //load googleapi\r\n         \r\n    }\r\n    componentDidMount() {\r\n      /*\r\n        window.gapi.load('auth2', () => {\r\n            window.gapi.auth2.init({\r\n              client_id: '371241974185-sm50v3tk1d5e2lj4huqnihlqajft59cc.apps.googleusercontent.com'\r\n        }).then(() => {\r\n\r\n          }); \r\n        });\r\n      */\r\n    }   \r\n    //增加一個count的參數，用來表示每次增加多少\r\n    uploadValue(e){\r\n        const exeurl = 'https://script.google.com/macros/s/AKfycbyFkwIJ944YLmLue5TkIvleLs06FSPdj-iT-qXbqgDVUcA7t88v/exec';\r\n        //e.preventDefault();\r\n        \r\n        console.log(this.state.inputValue);\r\n        //this.setState({clickCount:this.state.clickCount + count});\r\n        let datastr=this.state.id+','+this.state.column+','+this.state.inputValue;\r\n\r\n        let uploaddata = {\r\n           data: datastr,\r\n           sheetUrl: 'https://docs.google.com/spreadsheets/d/1G_kFRH_lvFo9gv_atD7VfPYekBCHoqr6-FS5W9eBzW4/edit?usp=sharing',\r\n           sheetTag: 'score'\r\n        }\r\n        console.log(datastr);\r\n\r\n        $.ajax({\r\n          type: 'GET',\r\n          beforeSend: function(res) {\r\n            res.setRequestHeader('Access-Control-Allow-Origin', '*');\r\n            res.setRequestHeader('Access-Control-Allow-Headers', 'Content-Type');\r\n            res.setRequestHeader('Access-Control-Allow-Credentials', true);\r\n            res.setRequestHeader('Access-Control-Allow-Headers', 'application/json');\r\n          },\r\n          url: exeurl,\r\n          data: uploaddata,\r\n          dataType: 'jsonp',\r\n          cache: false,\r\n          success: function (response) {\r\n            console.log('a');\r\n            //window.location.reload();\r\n          }\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        //console.log(`點了${this.state.clickCount}下`);\r\n    }\r\n    updateInputValue(evt) {\r\n      this.setState({\r\n        inputValue: evt.target.value\r\n      });\r\n    }\r\n    \r\n    render(){\r\n        //在onClick中指定觸發的函式後面添加.bind(this)並填上傳入的第一個參數1\r\n        //<input type=\"button\" onClick={this.addCount.bind(this,1)} value=\"點我\" />\r\n        return (\r\n          <div>\r\n            <Button animated onClick={this.uploadValue.bind(this)}>\r\n              <Button.Content visible>Upload</Button.Content>\r\n              <Button.Content hidden>\r\n                <Icon name='arrow up' />\r\n              </Button.Content>\r\n            </Button>\r\n            <Input placeholder={this.state.inputValue} value={this.state.inputValue} onChange={evt => this.updateInputValue(evt)}/>\r\n          </div>\r\n        );\r\n              \r\n    }\r\n}\r\n\r\nexport default ScoreButton;","import React from 'react';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nclass ToggleButton extends React.Component {\r\n  constructor(props){\r\n        super(props);\r\n\r\n        this.state = ({ active : this.props.active\r\n                     });\r\n         \r\n    }\r\n\r\n  handleClick = () => {\r\n    this.setState({ active: !this.state.active });\r\n    window.location.reload();\r\n  }\r\n  render() {\r\n    return (\r\n      <Button toggle active={this.state.active} onClick={this.handleClick}>\r\n        完成評分\r\n      </Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ToggleButton;","import React from 'react';\r\nimport { Button, Table, Icon, Header, Image, Modal} from 'semantic-ui-react';\r\nimport ScoreButton from '../components/scoreButton';\r\nimport ToggleButton from '../components/toggleButton';\r\n\r\nclass CellCluster extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n                \r\n        let nd =[];\r\n        for(let i=0;i<this.props.rownum;i+=1){\r\n           let row = [];\r\n           for(let j=0;j<this.props.columnnum;j+=1){\r\n              row.push(this.props.data[i*this.props.columnnum+j]);\r\n           } \r\n           nd.push(row); \r\n        }\r\n\r\n        this.state = ({ clickCount : 0,\r\n                        data: nd,\r\n                        rownum: this.props.rownum,\r\n                        columnnum: this.props.columnnum,\r\n                        clustername: this.props.clustername\r\n                     });\r\n         \r\n    }\r\n    componentDidMount() {\r\n    }   \r\n\r\n    componentDidUpdate(){\r\n        \r\n    }\r\n\r\n    updateInputValue(evt) {\r\n\r\n      this.setState({\r\n        inputValue: evt.target.value\r\n      });\r\n    }\r\n\r\n    popupActive(){\r\n      if (this.state.modalTrigger===false){\r\n        this.setState({\r\n          modaltrigger: true\r\n        });\r\n      }     \r\n    }\r\n\r\n    render(){\r\n\r\n    const celltable = this.state.data.map((row,i) => {\r\n      return(\r\n              <Table.Row key={i}>\r\n                {row.map((each,j)=>{\r\n                  return(\r\n                    <Table.Cell key={j}>\r\n                      \r\n                      \r\n                      <Modal size='large' trigger={\r\n                          <Button animated color={ each.done ?'green':'grey'}>\r\n                            <Button.Content visible>\r\n                              { each.groupName+'\\n'+this.state.clustername+'-'+each.seatNumber}\r\n                            </Button.Content>\r\n                            <Button.Content hidden>\r\n                              <Icon name='arrow up' />\r\n                            </Button.Content>\r\n                          </Button>\r\n                        }>\r\n                        <Modal.Header>{each.groupName}</Modal.Header>\r\n                        <Modal.Content image>\r\n                          <Image wrapped size='large' src='https://react.semantic-ui.com/images/avatar/large/rachel.png' />\r\n                          <Modal.Description>\r\n                            <Header>目前評分</Header>\r\n                            <Table>\r\n                            <Table.Body>\r\n                                <Table.Row key={each.id+'-r1'}>\r\n                                  <Table.Cell>技術分數</Table.Cell>\r\n                                  <Table.Cell key={each.id+'-1'}><ScoreButton  id={each.id} column={5} scoreValue={each.scoreTech}></ScoreButton></Table.Cell>\r\n                                </Table.Row>\r\n                                <Table.Row key={each.id+'-r2'}>\r\n                                  <Table.Cell>創意分數</Table.Cell>\r\n                                  <Table.Cell key={each.id+'-2'}><ScoreButton id={each.id} column={6} scoreValue={each.scoreCreative}></ScoreButton></Table.Cell>\r\n                                </Table.Row>\r\n                                <Table.Row key={each.id+'-r3'}>\r\n                                  <Table.Cell>簡報分數</Table.Cell>\r\n                                  <Table.Cell key={each.id+'-3'}><ScoreButton key={each.id} id={each.id} column={7} scoreValue={each.scorePresent}></ScoreButton></Table.Cell>\r\n                                </Table.Row>\r\n                                <Table.Row key={each.id+'-r4'}>\r\n                                  <Table.Cell>設計分數</Table.Cell>\r\n                                  <Table.Cell key={each.id+'-4'}><ScoreButton key={each.id} id={each.id} column={8} scoreValue={each.scoreDesign}></ScoreButton></Table.Cell>\r\n                                </Table.Row>\r\n                                <Table.Row key={each.id+'-r5'}>\r\n                                  <Table.Cell>創造價值分數</Table.Cell>\r\n                                  <Table.Cell key={each.id+'-5'}><ScoreButton key={each.id} id={each.id} column={9} scoreValue={each.scoreValue}></ScoreButton></Table.Cell>\r\n                                </Table.Row>\r\n                              </Table.Body>\r\n                            </Table>\r\n                          </Modal.Description>\r\n                          <Modal.Actions>\r\n                            <ToggleButton key={each.id+'-6'} active={each.done}></ToggleButton>\r\n                          </Modal.Actions>\r\n                        </Modal.Content>\r\n                      </Modal>\r\n\r\n\r\n                    </Table.Cell>\r\n                  );\r\n                  })\r\n                }\r\n              </Table.Row>\r\n      );\r\n    });\r\n\r\n\r\n    const cell = () => {\r\n      return(\r\n        <Table>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell textAlign='center' colSpan={this.state.columnnum}>{this.state.clustername}</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n           {celltable}\r\n          </Table.Body> \r\n        </Table>\r\n      );\r\n    }\r\n    return (\r\n          <div>\r\n            {cell()}\r\n          </div>\r\n        );\r\n              \r\n    }\r\n}\r\n\r\nexport default CellCluster;","import React from 'react';\r\nimport { Table, Grid} from 'semantic-ui-react';\r\nimport CellCluster from '../components/cellCluster';\r\n\r\nclass scoreTable extends React.Component {\r\n\r\n  //******** construct ********\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        content : null\r\n    };\r\n  }\r\n\r\n  //******** preload async ********\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData(){\r\n      const vjson = { A:[],\r\n                      B:[],\r\n                      C:[],\r\n                      D:[],\r\n                      E:[]};\r\n      // get data\r\n      fetch('https://spreadsheets.google.com/feeds/list/1G_kFRH_lvFo9gv_atD7VfPYekBCHoqr6-FS5W9eBzW4/od6/public/values?alt=json')\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n          \r\n          \r\n          for (let i = 0; i < responseJson.feed.entry.length; i+=1) {\r\n            let snv = responseJson.feed.entry[i].gsx$座號.$t;\r\n            let cn = snv.split(\"-\")[0];\r\n            let v = snv.split(\"-\")[1];\r\n            let vd = (responseJson.feed.entry[i].gsx$是否完成一.$t === 'TRUE') ? true : false ;\r\n            let val = {\r\n              'id':responseJson.feed.entry[i].gsx$列值.$t,\r\n              'seatNumber':v,\r\n              'groupName':responseJson.feed.entry[i].gsx$組名.$t,\r\n              'pdf':responseJson.feed.entry[i].gsx$簡報.$t,\r\n              'scoreTech':responseJson.feed.entry[i].gsx$技術分一.$t,\r\n              'scoreCreative':responseJson.feed.entry[i].gsx$創意分一.$t,\r\n              'scorePresent':responseJson.feed.entry[i].gsx$簡報分一.$t,\r\n              'scoreDesign':responseJson.feed.entry[i].gsx$設計分一.$t,\r\n              'scoreValue':responseJson.feed.entry[i].gsx$創造價值分一.$t,\r\n              'done':vd,\r\n            };\r\n\r\n            switch (cn){\r\n                case 'A':\r\n                  vjson.A.push(val);\r\n                  break;\r\n                case 'B':\r\n                  vjson.B.push(val);\r\n                  break;\r\n                case 'C':\r\n                  vjson.C.push(val);\r\n                  break;                              \r\n                case 'D':\r\n                  vjson.D.push(val);\r\n                  break;\r\n                case 'E':\r\n                  vjson.E.push(val);\r\n                  break; \r\n                default :\r\n                  break;                 \r\n            }\r\n            \r\n            \r\n          }\r\n          this.setState({ content :  vjson });\r\n          //console.log(this.state.content.C);\r\n        }\r\n        )\r\n      .catch((error) => {\r\n         console.error(error);\r\n      });\r\n  }\r\n\r\n  \r\n  render() {\r\n\r\n    //******** deploy ******** \r\n      // [function] const val = ()=>{return (<><>);} \r\n      // or \r\n      // [value] const val = (<><>);\r\n    //********  all should use the same format to deploy ******** \r\n    /*\r\n    const header = (\r\n      <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>組名</Table.HeaderCell>\r\n            <Table.HeaderCell>座號</Table.HeaderCell>\r\n            <Table.HeaderCell>簡報</Table.HeaderCell>\r\n            <Table.HeaderCell>評分</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n    );\r\n\r\n    const rows = (this.state.content == null) ? \r\n                ( <Table.Row>\r\n                  </Table.Row>\r\n                ):\r\n                this.state.content.map( (v, i) => {\r\n                  return(\r\n                    <Table.Row key={'row-'+i}>\r\n                      <Table.Cell key={'groupName-'+i}>{v.groupName}</Table.Cell>\r\n                      <Table.Cell key={'seatNumber-'+i}>{v.seatNumber}</Table.Cell>\r\n                      <Table.Cell key={'pdf-'+i}><PDFButton row={i} column={0} pdfValue={v.pdf}></PDFButton></Table.Cell>\r\n                      <Table.Cell key={'scoreA-'+i}><ScoreButton row={i} column={0} scoreValue={v.scoreA}></ScoreButton></Table.Cell>\r\n                    </Table.Row>\r\n                  );\r\n                });\r\n\r\n    const body = (\r\n          <Table.Body>\r\n            {rows}\r\n          </Table.Body>\r\n\r\n          \r\n    );\r\n    */\r\n    \r\n    const ca = (this.state.content == null) ?\r\n                (<Grid></Grid>):\r\n                (<CellCluster data={this.state.content.A} rownum={3} columnnum={3} clustername={'A'}></CellCluster>);\r\n    const cb = (this.state.content == null) ?\r\n                (<Grid></Grid>):\r\n                (<CellCluster data={this.state.content.B} rownum={3} columnnum={3} clustername={'B'}></CellCluster>);\r\n    const cc = (this.state.content == null) ?\r\n                (<Grid></Grid>):\r\n                (<CellCluster data={this.state.content.C} rownum={3} columnnum={3} clustername={'C'}></CellCluster>);\r\n    const cd = (this.state.content == null) ?\r\n                (<Grid></Grid>):\r\n                (<CellCluster data={this.state.content.D} rownum={3} columnnum={3} clustername={'D'}></CellCluster>);\r\n    const ce = (this.state.content == null) ?\r\n                (<Grid></Grid>):\r\n                (<CellCluster data={this.state.content.E} rownum={3} columnnum={4} clustername={'E'}></CellCluster>);            \r\n    //******** render ********\r\n    return (\r\n      <div>\r\n        <Table attached='top' basic>\r\n        </Table>\r\n      \r\n\r\n        <Grid celled>\r\n            <Grid.Row>\r\n              <Grid.Column width={1}>\r\n                \r\n              </Grid.Column>\r\n              <Grid.Column width={4}>\r\n                \r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                {cc}\r\n              </Grid.Column>\r\n              <Grid.Column width={1}>\r\n                \r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                {cb}\r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                {ca}\r\n              </Grid.Column>\r\n              <Grid.Column width={1}>\r\n                \r\n              </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row >\r\n              <Grid.Column width={1}>\r\n                \r\n              </Grid.Column>\r\n              <Grid.Column width={4}>\r\n                {ce}\r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                {cd}\r\n              </Grid.Column>\r\n              <Grid.Column width={1}>\r\n                \r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                \r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                \r\n              </Grid.Column>\r\n              <Grid.Column width={1}>\r\n                \r\n              </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default scoreTable;","import React from 'react';\nimport logo from './logo_yuntech.svg';\nimport './App.css';\nimport ScoreTable from './layouts/scoreTable'\nimport { Header } from 'semantic-ui-react';\n\n//\nfunction App() {\n  return (\n    <div className=\"App\">\n    <div className=\"App-header\">\n      <img src={logo} className='App-logo' alt='logo'/>\n      <Header as='h2' textAlign='center' >國立雲林科技大學</Header>\n      <Header as='h4' textAlign='center'>2019。黑克松中部區賽。評分系統</Header>\n    </div>\n    <ScoreTable />\n        \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui/dist/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}